(()=>{"use strict";var e={2706:function(e,t,l){var i,r,n,a,s=l("1549"),c=l("4194"),o=l("8082"),d=l("1105"),u=l("6384");l("1462");var h=l("8905");h.Z.Sider,h.Z.Footer,h.Z.Content;l("414"),l("8119");var g=l("7287"),p=l("7147"),v=l("8888");let x=g.Z.Item,m=()=>{let{t:e}=(0,v.$G)(),t=e("gallery.algorithmList",{returnObjects:!0});return(0,s.jsx)(g.Z,{defaultSelectedKeys:["0"],style:{width:"100%",margin:0,padding:0},children:null==t?void 0:t.map((e,t)=>(0,s.jsx)(x,{children:(0,s.jsx)(p.Z,{style:{width:"100%",height:"100%",marginLeft:10},href:`#${e.title}`,children:null==e?void 0:e.title})},`${t}`))})};l("5239"),l("5792");var y=l("2407"),j=l("800"),C=l("6109"),f=l("1913");let b=e=>{let t;return t="number"==typeof e?{key:e,value:e}:e};var k=l("9378"),w=l.n(k);let Z=(e,t)=>{let{fields:l}=e??{};return l[t]},A=new Map([["pie",class e{generateChartOptions(e){let{options:t}=e??{},{fields:l,type:i,layout:r,visual:n}=t??{},{category:a,value:s}=l??{};return{layout:r,visual:n,type:i,chartFields:{categoryField:a,valueField:s}}}}],["bar",class e{generateChartOptions(e){let{options:t}=e??{},{fields:l,type:i,layout:r,visual:n}=t??{},{category:a,value:s}=l??{},{direction:c="vertical"}=r??{},o={xField:a,yField:s};return"horizontal"===c&&(o={xField:s,yField:a}),{layout:r,visual:n,type:i,chartFields:o}}}]]),L=new Map([["object-array",class e{generateData(e){return e}}],["number-array",class e{generateData(e){return null==e?void 0:e.map((e,t)=>({key:t,value:e}))}}]]);class S{getChartOptions(e){return this.strategy.generateChartOptions(e)}constructor(e){(0,f._)(this,"strategy",void 0),this.strategy=e}}class F{getData(e){var t;return null===(t=this.strategy)||void 0===t?void 0:t.generateData(e)}constructor(e){(0,f._)(this,"strategy",void 0),this.strategy=e}}class O{setData(e){this.schema.data=w().cloneDeep(e)}getData(){return this.schema.data}setDataStructureType(e){this.schema.dataStructureType=e}getDataStructureType(){return this.schema.dataStructureType}setChartConfig(e){this.schema.chartConfig=w().cloneDeep(e)}getChartConfig(){return this.schema.chartConfig}getActions(){return this.schema.actions}setActions(e){this.schema.actions=e}setFields(e){this.schema.fields=w().cloneDeep(e)}getFields(){return this.schema.fields}getSchema(){return this.schema}constructor(){(0,f._)(this,"schema",void 0),this.schema={dataStructureType:"",data:[],actions:[],fields:{},chartConfig:{type:"",visual:{},layout:{},chartFields:{}}}}}let T=()=>{let e=new O;return{loadChartConfig:t=>{let{options:l}=t??{},{type:i}=l??{},r=null==A?void 0:A.get(i);r&&e.setChartConfig(new S(new r).getChartOptions(t))},loadData:t=>{var l;let i="array";if("array"===i){let e=(null==t?void 0:t.every(e=>w().isNumber(e)))?"number":"object";i=`${e}-${i}`}let r=null==L?void 0:L.get(i);r&&(null==e||e.setData((l=new F(new r),l.getData(t))))},loadBasicProperties:(t,l)=>{e.setFields(t),e.setDataStructureType(l),e.setActions([])},build:()=>e}},D={array:{dataStructureType:"array",data:[],options:{type:"bar",visual:{},fields:{category:"key",value:"value"}},actions:[]}};class P{getDefaultConfig(e,t){if("string"!=typeof e){let l=null==D?void 0:D.array;t=w().cloneDeep({...l,data:e})}return["array",t]}init(e,t){[e,t]=this.getDefaultConfig(e,t);let{data:l,options:i}=t??{},{fields:r}=i??{},n=T();n.loadData(l),n.loadChartConfig(t),n.loadBasicProperties(r,e);let a=n.build();this.schema=a.getSchema(),this.data=w().cloneDeep(a.getData())}getInstance(){return this}get length(){return this.data.length}getProxy(){let e=this;return new Proxy(this,{get(t,l){if(!isNaN(Number(l)))return t.get(l);let i=null==t?void 0:t[l];return"function"==typeof i?i.bind(e):i},set:(e,t,l)=>(!isNaN(Number(t))&&e.set(+t,l),!0)})}push(e){this.data.push(b(e)),this.schema.actions.push({op:"push",value:b(e)})}pop(){this.data.pop(),this.schema.actions.push({op:"pop"})}set(e,t){let l=Z(this.schema,"category"),i=Z(this.schema,"value"),r=e;if(isNaN(+e)){let e=0;this.data.map((t,i)=>{if((null==t?void 0:t[l])===(null==r?void 0:r[l])){e=i;return}}),this.data[e]=w().cloneDeep(r)}else r={id:`${t}-${e}`,[l]:+e,[i]:+t},this.data[+e]=w().cloneDeep(r);this.schema.actions.push({op:"set",value:r})}get(e){var t;let l=Z(this.schema,"category"),i=Z(this.schema,"value"),r=this.data.filter(t=>(null==t?void 0:t[l])===+e);if(r[0])return null===(t=r[0])||void 0===t?void 0:t[i]}insert(e,t){this.data.splice(t,0,e),this.schema.actions.push({op:"insert",value:b(e),place:t})}delete(e){let t=Object.keys(e)[0],l=0;this.data.map((i,r)=>{(null==i?void 0:i[t])===+Object.values(e)[0]&&(l=r)}),this.data.splice(l,1),this.schema.actions.push({op:"delete",value:e})}constructor(e,t){return this.init(e,t),this.getProxy()}}let M={push:e=>{let{data:t,modifyValue:l={}}=e;return t.push(l),t},pop:e=>{let{data:t}=e;return t.pop(),t},set:e=>{let{data:t,modifyValue:l={},category:i="key"}=e,r=-1;return t.map((e,t)=>{if(e[i]===(null==l?void 0:l[i])){r=t;return}}),t[r]=l,t},insert:e=>{let{data:t,modifyValue:l={},place:i=0}=e;return t.splice(i,0,l),t},delete:e=>{let{data:t,modifyValue:l={}}=e,i=Object.keys(l)[0],r=0;return t.map((e,t)=>{e[i]===Object.values(l)[0]&&(r=t)}),t.splice(r,1),t}};class B{getProxy(){let e=this;return new Proxy(this,{get(t,l){if(!isNaN(Number(l)))return t.get(l);let i=null==t?void 0:t[l];return"function"==typeof i?i.bind(e):i},set:(e,t,l)=>(!isNaN(Number(t))&&e.set(+t,l),!0)})}getDefaultConfig(e,t){let l=null==D?void 0:D[e];return t=w().cloneDeep({...l,data:t})}init(e,t){!(null==t?void 0:t.options)&&(t=this.getDefaultConfig(e,t));let{data:l,options:i}=t??{},{fields:r}=i??{},n=T();n.loadData(l),n.loadChartConfig(t),n.loadBasicProperties(r,e);let a=n.build();this.schema=a.getSchema(),this.data=a.getData()}getInstance(){return this}get isEmpty(){return!this.data.length}push(e){this.data.push(b(e)),this.schema.actions.push({op:"push",value:b(e)})}pop(){this.data.pop(),this.schema.actions.push({op:"pop"})}clear(){this.data=[]}size(){return this.data.length}constructor(e,t){return this.init(e,t),this.getProxy()}}class I{getInstance(e,t){switch(e){case"array":return new P(e,t);case"stack":return new B(e,t);default:throw Error(`Unknown type: ${e}`)}}constructor(e,t){return this.getInstance(e,t)}}let V=(e,t,l)=>{let{data:i}=t,{category:r,value:n}=(null==l?void 0:l.fields)??{},a=null==e?void 0:e.value,s=null==e?void 0:e.op,c=null==e?void 0:e.place,o={data:i[0].values,modifyValue:a,category:r,place:c,value:n};return i[0].values=w().cloneDeep(M[s](o)),t},N=e=>e.actions,_=(e,t,l)=>new z(t,l,N(e),e);class z{constructor(e,t,l,i){(0,f._)(this,"spec",void 0),(0,f._)(this,"vchart",void 0),(0,f._)(this,"actions",void 0),(0,f._)(this,"schema",void 0),(0,f._)(this,"index",0),(0,f._)(this,"exe",async()=>{await new Promise(e=>setTimeout(e,1e3));let e=V(this.actions[this.index],this.spec,this.schema);this.vchart.updateSpecSync(e),this.vchart.renderAsync()}),(0,f._)(this,"exeNext",async()=>{await this.exe(),this.index++}),(0,f._)(this,"exePre",async()=>{await this.exe(),this.index--}),this.spec=e,this.vchart=t,this.actions=l,this.schema=i}}(i=n||(n={}))[i.visactor=0]="visactor",i[i.d3=1]="d3";let $=(e,t)=>{let l=new C.ZPm(e,{dom:t});return l.renderAsync(),l},q=e=>{let{chartConfig:t,data:l}=e,{type:i,layout:r,visual:n,chartFields:a}=t??{};return{type:i,...n,...r,...a,data:[{id:`${i}-data`,values:l}]}},G=(e,t,l)=>{if(n.visactor===t){let t=q(e),i=$(t,l),r=_(e,t,i);return[t,i,r]}let i=q(e),r=new C.ZPm(i,{dom:l});r.renderAsync();let a=new z(i,r,N(e),e);return[i,r,a]};l("4057");var W=l("8895");l("3654"),l("8718"),l("8490");var E=l("2239"),K=l("9542"),H=l("859"),R=l("2666"),U=l("3007"),Y=l("3745");(0,Y.Ue)()(e=>({page:"0",setPage:t=>e(()=>({page:t}))}));let J=(0,Y.Ue)()(e=>({themeColor:"#F7BA1E",titleBachgroundColor:"var(--color-fill-2)",contentBackgroundColor:"var(--color-bg-2)",setThemeColor:t=>e(()=>({themeColor:t}))}));(0,Y.Ue)()(e=>({lng:0,setLng:t=>e(()=>({lng:t}))}));let Q=e=>{let{onChange:t,code:l}=e,i=(0,c.useRef)(null),[r,n]=(0,c.useState)(null),a=(0,U.Ik)(),o=J(e=>e.contentBackgroundColor),d=(0,c.useCallback)(e=>{i.current=e,n(e)},[]);(0,c.useEffect)(()=>{if(r){let e=null==a?void 0:a.languages.registerCompletionItemProvider("javascript",{provideCompletionItems:function(e,t){let l=e.getWordUntilPosition(t),i={startLineNumber:t.lineNumber,endLineNumber:t.lineNumber,startColumn:l.startColumn,endColumn:l.endColumn},r=[{label:"AlVisArray",kind:a.languages.CompletionItemKind.Class,insertText:"AlVisArray([])",range:i},{label:"AlVisStack",kind:a.languages.CompletionItemKind.Class,insertText:"AlVisStack([])",range:i},{label:"AlVis",kind:a.languages.CompletionItemKind.Class,insertText:'AlVis("", { data: [], options: {}})',range:i}],n=e.getValue(),s=["push","pop","insert","get","set","delete"],c=["push","pop"];return n.includes("AlVisArray")?(null==s||s.map(e=>{r.push({label:e,kind:a.languages.CompletionItemKind.Method,insertText:`${e}()`,range:i})}),r.push({label:"length",kind:a.languages.CompletionItemKind.Property,insertText:"length",range:i})):n.includes("AlVisStack")&&(null==c||c.map(e=>{r.push({label:e,kind:a.languages.CompletionItemKind.Method,insertText:`${e}()`,range:i})})),{suggestions:r}}});return()=>null==e?void 0:e.dispose()}},[r]);let u=(0,c.useCallback)(()=>{var e;t((null==i?void 0:null===(e=i.current)||void 0===e?void 0:e.getValue())||"")},[l]);return(0,s.jsxs)("div",{id:"container",style:{height:"550px"},children:[(0,s.jsx)("div",{style:{padding:10,marginBottom:8,backgroundColor:o},children:(0,s.jsx)(K.Z,{content:"Run",color:"#165DFF",children:(0,s.jsx)(R.Z,{children:(0,s.jsx)(H.Z,{type:"outline",icon:(0,s.jsx)(E.Z,{}),shape:"circle",onClick:u})})})}),(0,s.jsx)(U.ML,{onMount:d,height:"500px",language:"javascript",theme:"vs-light",value:l})]})},X=e=>{let t=Function("AlVis","AlVisArray","AlVisStack",e)(I,P,B),l=(t=t()).schema;return window.schema=l,l};W.Z.Row,W.Z.Col;let ee=e=>{let{schema:t,id:l}=e;return(0,c.useEffect)(()=>{if(!t)return;let[,e,i]=G(t,n.visactor,l);return(async()=>{for(let e=0;e<t.actions.length;e++)await i.exeNext()})(),()=>{e.release()}},[t]),(0,s.jsx)("div",{style:{height:"100%"},children:(0,s.jsx)("div",{style:{height:"100%"},id:l})})},et=`const defaultFunctionTemplate = function () {
    // Your code here
    const arr = new AlVis("array", {
        data: [
            { month: 'Monday', sales: 22 },
            { month: 'Tuesday', sales: 13 },
            { month: 'Wednesday', sales: 25 },
            { month: 'Thursday', sales: 29 },
            { month: 'Friday', sales: 38 }
        ],
        options: {
            type: "bar",
            layout: {
                direction: "horizontal"
            },
            fields: {
                category: "month",
                value: "sales"
            },
        }
    })
    return arr
}

return defaultFunctionTemplate`;(r=a||(a={}))[r.visactor=0]="visactor",r[r.d3=1]="d3";let el=e=>{let{code:t=et,id:l="chart"}=e,[i,r]=(0,c.useState)(null);return(0,c.useEffect)(()=>{0!==t.length&&r(X(t))},[t]),(0,s.jsx)("div",{style:{height:"100%"},children:(0,s.jsx)(ee,{id:l,schema:i})})},ei=[`const defaultFunctionTemplate = function () {
      const arr = new AlVisArray([10, 9, 8, 7, 6, 5, 4, 3, 2, 1])
      const n = arr.length
      for (let i = 0; i < n - 1; i++) {
          for (let j = 0; j < n - 1 - i; j++) {
              if (arr[j] > arr[j + 1]) {
                  // \u{4EA4}\u{6362}\u{5143}\u{7D20}
                  let temp = arr[j];
                  arr[j] = arr[j + 1];
                  arr[j + 1] = temp;
              }
          }
      }
      return arr
  }
  
  return defaultFunctionTemplate`],er=[ei,[],[`const defaultFunctionTemplate = function () {
    // Your code here
    const array = new AlVisArray([10, 9, 8, 7, 6, 5, 4, 3, 2, 1])
    for (let i = 1; i < array.length; i++) {
        const key = array.get(i);
        let j = i - 1;

        while (j >= 0 && array.get(j) > key) {
            [array[j+1], array[j]] = [array[j], array[j + 1]]
            j = j - 1;
        }
    }
    return array
}

return defaultFunctionTemplate`,`const defaultFunctionTemplate = function () {
    const nums = new AlVisArray([10, 9, 8, 7, 6, 5, 4, 3, 2, 1])
    qSort(nums, 0, nums.length - 1)
    return nums;
}

const qSort = (q, l, r) => {
    if (l >= r) return;

    let i = l - 1, j = r + 1, x = q[l];
    while (i < j) {
        do i++; while (q[i] < x);
        do j--; while (q[j] > x);
        if (i < j) [q[i], q[j]] = [q[j], q[i]]
    }
    qSort(q, l, j);
    qSort(q, j + 1, r);
}


return defaultFunctionTemplate`]],en=e=>{var t;let{name:l,type:i,num:r}=e,[n,a]=(0,c.useState)(!1),[o,d]=(0,c.useState)(null==er?void 0:null===(t=er[i])||void 0===t?void 0:t[r]);return(0,s.jsxs)("div",{children:[(0,s.jsx)(j.Z,{style:{marginBottom:10,marginRight:10},title:l,extra:(0,s.jsx)("div",{onClick:()=>a(!0),children:"More"}),children:(0,s.jsx)("div",{style:{width:360,height:400},children:(0,s.jsx)(el,{id:l,code:o})})}),(0,s.jsx)(y.Z,{style:{width:1200},title:l,visible:n,onOk:()=>a(!1),onCancel:()=>a(!1),autoFocus:!1,focusLock:!0,children:(0,s.jsxs)("div",{style:{display:"flex"},children:[(0,s.jsx)("div",{style:{width:400},children:(0,s.jsx)(el,{id:`${l}-chart`,code:o})}),(0,s.jsx)("div",{style:{width:700},children:(0,s.jsx)(Q,{onChange:e=>{d(e)},code:o})})]})})]})},ea=()=>{let{t:e}=(0,v.$G)(),t=e("gallery.algorithmList",{returnObjects:!0});return(0,s.jsx)("div",{children:null==t?void 0:t.map((e,t)=>{var l;return(0,s.jsxs)("div",{id:`${null==e?void 0:e.title}`,children:[(0,s.jsx)("h3",{children:null==e?void 0:e.title}),(0,s.jsx)("div",{style:{marginTop:20,display:"flex"},children:null==e?void 0:null===(l=e.algorithms)||void 0===l?void 0:l.map((e,l)=>(0,s.jsx)(en,{name:e,type:t,num:l}))})]})})})},es=h.Z.Content,ec=h.Z.Sider;l("9575");var eo=l("8442");l("8746");var ed=l("9590"),eu=l("8028"),eh=l("9258");let eg=(0,Y.Ue)()(e=>({page:"0",setPage:t=>e(()=>({page:t}))})),ep=(0,Y.Ue)()(e=>({themeColor:"#F7BA1E",titleBachgroundColor:"var(--color-fill-2)",contentBackgroundColor:"var(--color-bg-2)",setThemeColor:t=>e(()=>({themeColor:t}))}));(0,Y.Ue)()(e=>({lng:0,setLng:t=>e(()=>({lng:t}))}));let ev=()=>{let e=ep(e=>e.themeColor);return(0,s.jsxs)("div",{children:["\u4E00\u4E2A\u57FA\u4E8E",(0,s.jsxs)("span",{style:{position:"relative"},children:["\u6807\u51C6",(0,s.jsx)("svg",{width:"240",height:"20",viewBox:"0 0 240 20",fill:"currentColor",xmlns:"http://www.w3.org/2000/svg",style:{color:e,position:"absolute",top:"55px",left:"1px",width:"100%",height:"auto"},children:(0,s.jsx)("path",{d:"M20.766 10.187c.939-.024.386-.885.552-1.401 1.105-.301.553.626.962 1.061.685-.263 1.171-1.1 1.696-1.085.044.144.15.191.044.378.697-.736 2.21-.134 2.995-1.052a.55.55 0 0 1 .127.215 3.35 3.35 0 0 1-.204-1.204c.42-.034.751-.593.94 0-.255 0-.266.23-.377.416l.426-.273c.448.813-.586.316-.553.927.84-.306 1.802-1.037 2.476-.831.182.803-1.525.339-.608 1.023l-1.033-.268c.85 1.248-.625-.057.171 1.276 1.348.177 1.47-.478 2.818-.3.276-.479-.132-.66.144-1.124 1.857-.885 1.602 1.984 2.94.846.337-.555.42-1.582 1.442-1.08l-.276.889c1.298.038.668-1.348 2.06-.784-.226.368-1.005.344-.8.444.917.689.59-.545 1.27-.569l.16.827c1.371-.181 2.863-.827 4.388-1.037-.072.249-.326.512.044.746 1.912-.478 4.123-.058 6.007.368l.68-.727c.05.015.095.04.132.074a.275.275 0 0 1 .077.118c.014.044.015.091.004.136a.27.27 0 0 1-.07.122c.74.243 0-.445.354-.732.414-.062.552.383.315.603 1.248-.636 3.586-1.401 4.973-.694l-.254.22c1.06.249 1.105-1.477 2.127-.855l-.182.129c2.293.23 4.785-.478 6.564.52.293-1.017 2.272.393 2.365-1.022 1.327.664.967.927 2.813 1.348.492.052.702-.899 1.299-1.061l.044.731.79-.794.47.87.552-.205a.66.66 0 0 1-.332-.2.517.517 0 0 1-.132-.33c.873-.354 2.177.477 2.21.831l2.078-.679c-.039.301-.387.411-.657.607 1.105-.779.226.77 1.232.053-.144-.163.06-.44.077-.588.553.435 1.691.416 2.547.205l-.149.512c1.558.1 3.271-.31 5.018-.335-.636-.224-.514-1.109 0-1.204l.226.774c.32-.478-.552-.282.122-.884.652.076.464.875.094 1.138l.784-.287c.056.23-.127.358-.165.655.309-.478 1.387.75 1.834-.096l.05.23c1.746-.03 2.53-.316 3.95-.383 0-.674.553-.535.984-1.085 1.05.196 2.21.707 3.482.63.878-.343.243-.568.635-.955.077.612 1.332.535.69.985a15.353 15.353 0 0 0 3.83-.68c-.21-.243-.447-.353-.331-.563a.738.738 0 0 1 .275.01c.09.02.173.058.245.11a.58.58 0 0 1 .169.188c.04.072.061.151.062.232l-.088.067c2.127-.956 4.973 1.706 6.669.41l-.099.068 1.763-.684c.817.1-.481.478.127.842 1.9-1.043 3.022.12 4.586-.574 1.243 1.793 4.327-.167 5.979.956l-.1-.42c.426-.421.52.234.835.33-.05-.33-.464-.378-.205-.613 3.598-.545 7.438.598 11.129.956 1.348.11.757-2.203 2.465-1.195l-.481.794c2.719-.956 5.564 0 8.233-.77-.154.182-.16.416-.425.416.552.574 2.083.034 2.094-.435.42.053.1.425.354.665.552.339 1.42-.732 1.718-.158.05.09-.16.186-.265.23.37-.278 1.719.076 1.365-.589 1 .32 1.917-.287 2.713.105.553-.736 1.713.364 1.884-.683-.077 1.08 1.752.875 2.387.377-.215.326.553.345.299.794.718 0 1.381-.206 1.265-.76 1.315 1.305 2.686-1.018 3.415.645a45.888 45.888 0 0 1 6.078-1.17c-.082 1.075-2.138.09-2.066 1.218 1.834-.425 2.906-1.343 4.719-1.066.47.153-.276.478-.437.65 1.835-.43 3.537.148 5.172-.42 0 .1-.182.21-.348.291.321-.033.741.167.713-.325l-.315.13c-.497-.718 1.304-1.468 1.365-1.841-.553 1.396 1.602.377.707 2.137a.73.73 0 0 0 .337-.263.58.58 0 0 0 .1-.383c.315.1.409.297.083.665 1.155-.254.757-.78 1.801-.75 0 .233-.221.324-.337.601.553-.478 1.078-.908 1.951-.697-.056.143.044.33-.216.325 1.509-.048 2.603-1.195 4.249-.722-.513 1.023.553.349.625 1.243l.895-.254-.348-.44c.785.034 1.492-.602 2.155-.296l-.591.354 1.47-.139-.824-.354c.807-.444-.055-1.132.978-.86-.21.086.785.029 1.177.56.398-.278.801-.57 1.376-.335.138.291-.149.984-.055 1.176.398-.736 1.834-.168 2.337-.956-.143.227-.192.49-.138.745l.337-.597c.359.2.409.296.337.669 1.105.134-.309-1.138.967-.626-.105.048-.055.138-.27.23 1.287.277 2.519-.335 3.702 0 .326.903-1.05.195-.669.955 1.724-.129 3.592-.999 5.25-.74l-.31-.106c.277-1.262 1.221.66 2.083.086-.21.086-.298.693-.237.555 1.105.234 2.343-.249 4.083-.603l-.226.32c.657.311 1.763.216 2.481.383.226-.315.641-.253.403-.731 2.166 1.912 4.305-.89 6.228.726-.238 0-.553.268-.387.273l1.702-.244c-.111-.554-.21-.34-.553-.784.124-.163.292-.298.489-.392.198-.094.419-.145.644-.148-.774.34-.028.884.287 1.205-.049-.173.072-.354.05-.526.846 1.008.199-1.11 1.376-.407l-.077.287c.458-.134.889-.478 1.37-.401.177.645-.492.282-.552.803.685 0 1.403-1.162 1.994-.507-.298.167-.718.158-1.016.325.641.77.729.583 1.221.717h-.044l1.138.378-.282-.21c.928-1.635 1.752-.25 2.951-1.3-1.166.994-.21.592-.332 1.309.288.21.724.454.586.65.553-.564.89.478 1.696-.34 0 .235.581.044.431.627.713-.163-.149-.411-.077-.703 1.133-.76 2.514 1.061 4.139.029 1.376-.397 1.658-1.171 2.94-1.515.403.392-.393.836-.393.836.267.161.581.255.906.27a1.97 1.97 0 0 0 .934-.184c-.138.196 0 .373.172.64.519-.038.386-.831 1.05-.477a3.24 3.24 0 0 1-.553.918c.619-.192 1.243-.603 1.884-.79.149.412-.409.603-.646.856.718-.153 1.851-.296 2.105-.927l-.442-.248c.26 0 .105.559-.094.669-.63.478-.862-.258-.884-.478l.459-.134c-.387-1.382-1.818.148-2.719.033l.431-.956-.973.784c-.182-.263-.287-.822.166-.956-.624-.516-.591.33-1.105-.239-.055-.086-.028-.134.033-.172l-.646.273c.132-.201-.072-.703.309-.545-1.105-.617-1.873.674-2.26-.096l.099-.057c-1.596.272-.193.721-1.414 1.534l-.713-1.83-.188.721c-.16-.033-.481-.1-.409-.387-.63.478.089.32-.287.78-.752-.699-2.172.229-2.293-.957-.31.545.729.478-.127.813-.183-1.258-.978.181-1.658-.416.254-.636.917-.273.226-.875-.486 1.076-1.386-.282-2-.096-.066.87-1.332.32-2.354.579.078-.292-1.89-.54-2.818-.885l.033-.148c-.221.87-1.182.674-1.901.832a.906.906 0 0 1 .132-.55c.102-.169.258-.31.449-.406h-.669a.979.979 0 0 1-.34.327 1.167 1.167 0 0 1-.478.151l.194-.65c-.885 0-1.813.712-2.94.244-.083.607.84 1.725-.381 2.103-.034-.335-.056-.899.27-1.028-.105.043-.381.263-.585.12l.502-.545c-.508-.258-.287.478-.701.397 0-.478-.293-.35-.221-.722.11-.038.359.205.525 0a1.931 1.931 0 0 1-.691-.264 1.649 1.649 0 0 1-.503-.487c.028.268-.028.636-.37.684-.89 0-.282-.574-.79-.832-.227.325-.78-.033-.824.674-.259 0-.293-.34-.387-.535-.469.3-2.149.033-1.657.793l.116.053s-.05 0-.078.033c-1.525.66-3.105-.478-4.608-.224V3.34c-.895.244-1.984.106-2.636.593a.711.711 0 0 1-.402-.28.553.553 0 0 1-.084-.442c-.691.158-.774.416-1.746 0 .701-.396-.221-.373.713-.287-.879-.224-1.067-.607-2.039 0 .342-.597-.641-.774-1.067-.602l.608.445c-.436.053-.88.039-1.31-.043l.254-.794c-1.784-1.004-3.315 1.578-4.647-.067-.497.545.973.411.553 1.052-.829-.124-1.658-1.286-1.929-1.29-1.132-.479-1.105 1.137-2.282.812a.818.818 0 0 1 .031.774.938.938 0 0 1-.264.323 1.11 1.11 0 0 1-.397.198c-.829-.124-.994-1.214-.464-1.434.205 0 .299.072.288.168.27-.096.629-.21.303-.526l-.116.282c-.403-.297-1.552-.292-1.271-.75-.635.257-.281.477.183.616-1.061-.435-1.658-.053-2.763-.344.171.162.326.478.155.478-1.608-.378-.724.526-1.824.636-.608-.445.249-1.033-.862-.684-.668-.306-.127-.755.149-.985-1.016.536-1.867-.387-2.442-.478l.553-.22a1.892 1.892 0 0 1-.846.12l.293.573c-.309-.105-.553-.11-.553-.348-.326.368.227.956-.42 1.434-.403-.297-1.265.286-1.392-.478 1.298.272-.127-.76.978-.866a1.102 1.102 0 0 1-.851.024c-.044-.086.044-.157.133-.2-1.233-.689-.592.846-1.879.807.171-.42-.287-.808-.497-.721.519 0 .237.712-.249 1.027-.823-.34-.906.235-1.337.187l.491.162c-.176.426-.585.364-1.165.478-.045-.33.524-.22.326-.368-.652.736-1.437-.793-2.338-.306-.409-.291-.027-.798-.387-.999-1.011.54-1.077-.588-2.133-.148.293.574.349.435-.403.985l1.735-.387-1.105.822c.525 0 1.105-.35 1.42-.249-.553.478-.481.316-.238.794-.701-.86-1.425.478-2.21-.1l.044-1.41c-1.232-.641-2.21.702-3.823.334l.513.248c-.221.56-.994.072-1.519.292.055-.478-.271-.645-.492-.956.028.349-1.177-.043-1.337.899l-.707-.627c-1.305-.267-1.503 1.33-2.763 1.157.381-.507-.183-.846.657-1.21-.414 0-.79-.095-.801.23-.276-.263-1.199.646-1.575.215-.182.206-.243.698-.713.655a.337.337 0 0 1 0-.234c0 .234-.735.31-.331.837-1.271-1.478-3.592.095-4.708-1.172-.936.165-1.883.277-2.835.335.05-.139 0-.234.16-.186-1.143-.44-.707 1.352-2.005.86-.664-.765.69-.411.276-.703-.171-1.553-1.564.21-2.437-.702l.21-.091c-.663-.555-1.608.564-2.713.454a.326.326 0 0 0 0-.234c-.746.784-2.155 1.051-3.205 1.271.326-.607.475-.32.276-.956-.47.091.138.99-.801 1.167-.304-.33-.984-.622-1.078-1.282l.89-.019c-.459-.85-1.149.034-1.613-.114l.055-.368c-1.36.124-1.376 1.06-2.835.999l.155.282c-.796.956-.674-.521-1.465.172l-.248-.956c-.871.453-1.797.82-2.763 1.094.552-.698 1.658-1.06 2.315-1.477-.519 0-1.774.072-2.044.54.21-.09.475-.325.685-.181a2.832 2.832 0 0 1-1.094.83 3.298 3.298 0 0 1-1.42.27c.171-1.832-2.713-.455-3.482-1.865-1.834.693-3.652-.258-5.796-.13.774 1.435-.625.049-.481 1.507-.497.1-.685.076-.729 0l-1.525-.86c-.365-.421.469-.326.42-.65-1.106-.106-.465-.618-1.194-1 .155.521-.37.75-1 .56l.901.659c-1.52.793-1.338-1.214-2.868-.43l.48-.478c-.79.277-2.917 0-3.674 1.204-.144-.167-.332-.564 0-.674-1.89-.148-4.183 1.31-5.664.612l.138-.358c-.348.105-.602.678-1.05.325 0-.148.138-.359 0-.378-.182.124-.923.64-1.392.44l.386-.411c-1.85-.44-2.807 1.023-4.343 1.29 0-1.051-1.475-1.376-2.21-1.53V.685c-2.15-.086-3.625.956-5.598 1.4-1.265-1.118-4.188-.392-6.194-.99.31.182 0 .818-.37.957-.475-.206-1.266.755-1.221-.21h.165c-.375-.957-1.326-.67-2.072-.675l-.083 1.267c-2.006-1.778-5.106.813-6.227-.803-.459.33-1.045.34-1.498.67v-.68a12.396 12.396 0 0 0-3.575 0l.31-.478c-.912 0-1.072 1.98-1.912 2.042l-.288-1c-1.591.053-3.232-.774-4.763.192 0-.148.055-.445.31-.478-.746 0-2.918-.588-2.587.788-.06-.903-1.657-.038-2.48.388l.104-.689c-.685.875-.701 1.11-1.696 1.377-.243-.076-.238-.526.088-.368-.812-.32-.59.655-1.574.33l.342-.435c-.823-.029-.746.2-1.177.707-.503.287-1.564-.114-1.713-.712-.094.368-.52.875-1.011.717a.38.38 0 0 1 .013-.245.442.442 0 0 1 .164-.2c-1.393-.406-2 .851-2.973.235a.553.553 0 0 0-.182-.392 9.431 9.431 0 0 1 1.89.028c0-.616-.912-.688-.255-1.563-.685.478-1.845 1.54-2.713 1.286a.84.84 0 0 1-.1-.215l.061-.072a.668.668 0 0 0-.295 0 .61.61 0 0 0-.257.125 1.992 1.992 0 0 0-.718-.158c-.128-.507-1.023-.234-1.465-.244.072.67-.508.583.06 1.119-.07-.048.078-.086.366-.125a.528.528 0 0 0 .188-.076l-.028.062c.287-.033.663-.062 1.105-.09-.332.358-.68.654-1.183.3-.204.445-.43.894-.552 1.11-.647-.914-1.83-1.377-2.022-1.946-1.321.43-3.145.368-3.918 1.663-.376.177-.459-.344-.614-.535.216-.139.476-.13.586-.316-.74.354-2.249.216-2.381 1.105-.984-.364.491-.837-.818-.636l.166-.277c-2.675-1.291-4.09 2.433-7.068.755.204.105.304.148.354.296-3.316-.645-6.709 1.038-10.018-.062-.94-.205-1 .359-1.531.818l-.249-.713-.906.88c-1.315.679-2.47-1.65-4.117-.411l.254.478c-.624-.058-1.939.387-1.873-.177-.055.09-.166.516-.425.272l-.044-.372-1.487.712c-1.199-.215.078-1.506-1.658-1.492C.895 5.105-.22 6.114.04 6.362c.178.01.347.073.478.179a.645.645 0 0 1 .24.4l-.558.225C.17 8.279-.194 9.44 1.304 10.144l.917-.732.36.521-.818.1c.513.479.784 0 1.105-.305.07.225.233.42.458.55l.907-1.114c.149.43-.376.884.292 1.094.426-.516-.502-.956.233-1.314.513.478.403.898.933.44a.447.447 0 0 1 .012.336.525.525 0 0 1-.233.27c.476-.367 1.304-.214 1.525-.817.553.598 1.658-.248 1.691.808.29-.433.74-.77 1.277-.956-.752 1.3 1.724 0 1.591 1.348.553-1.162 2.21-.617 3.255-1.3-.055.095-.16.282-.265.23.624.061.823.391 1.237.592 0-.956.967-1.195 1.448-1.797.812.87-.392 1.118-.1 1.974-.082-.755 1.272-.813.973-1.434.614.53.514.248.862 1.008.028-1.17.553-.22.962-.956.873.54.282 1.086 1.182.689.453.354-.342.808-.342.808Zm21.793-2.93-.447.057.447-.058Zm1.818-.091a7.552 7.552 0 0 0-.801 0c-.072-.23 0-.478.171-.478-.083.186.348.305.63.478Zm-4.128-4.49c.288-.109.393 0 .442.159-.172.02-.343.053-.508.1v.081a.973.973 0 0 1 .066-.34Z"})})]}),"\u7684\u7B97\u6CD5\u53EF\u89C6\u5316\u5E93\u3002"]})},ex=()=>{let e=ep(e=>e.themeColor);return(0,s.jsxs)("div",{children:["An algorithm visualization library based on",(0,s.jsxs)("span",{style:{position:"relative"},children:["schema",(0,s.jsx)("svg",{width:"240",height:"20",viewBox:"0 0 240 20",fill:"currentColor",xmlns:"http://www.w3.org/2000/svg",style:{color:e,position:"absolute",top:"55px",left:"1px",width:"100%",height:"auto"},children:(0,s.jsx)("path",{d:"M20.766 10.187c.939-.024.386-.885.552-1.401 1.105-.301.553.626.962 1.061.685-.263 1.171-1.1 1.696-1.085.044.144.15.191.044.378.697-.736 2.21-.134 2.995-1.052a.55.55 0 0 1 .127.215 3.35 3.35 0 0 1-.204-1.204c.42-.034.751-.593.94 0-.255 0-.266.23-.377.416l.426-.273c.448.813-.586.316-.553.927.84-.306 1.802-1.037 2.476-.831.182.803-1.525.339-.608 1.023l-1.033-.268c.85 1.248-.625-.057.171 1.276 1.348.177 1.47-.478 2.818-.3.276-.479-.132-.66.144-1.124 1.857-.885 1.602 1.984 2.94.846.337-.555.42-1.582 1.442-1.08l-.276.889c1.298.038.668-1.348 2.06-.784-.226.368-1.005.344-.8.444.917.689.59-.545 1.27-.569l.16.827c1.371-.181 2.863-.827 4.388-1.037-.072.249-.326.512.044.746 1.912-.478 4.123-.058 6.007.368l.68-.727c.05.015.095.04.132.074a.275.275 0 0 1 .077.118c.014.044.015.091.004.136a.27.27 0 0 1-.07.122c.74.243 0-.445.354-.732.414-.062.552.383.315.603 1.248-.636 3.586-1.401 4.973-.694l-.254.22c1.06.249 1.105-1.477 2.127-.855l-.182.129c2.293.23 4.785-.478 6.564.52.293-1.017 2.272.393 2.365-1.022 1.327.664.967.927 2.813 1.348.492.052.702-.899 1.299-1.061l.044.731.79-.794.47.87.552-.205a.66.66 0 0 1-.332-.2.517.517 0 0 1-.132-.33c.873-.354 2.177.477 2.21.831l2.078-.679c-.039.301-.387.411-.657.607 1.105-.779.226.77 1.232.053-.144-.163.06-.44.077-.588.553.435 1.691.416 2.547.205l-.149.512c1.558.1 3.271-.31 5.018-.335-.636-.224-.514-1.109 0-1.204l.226.774c.32-.478-.552-.282.122-.884.652.076.464.875.094 1.138l.784-.287c.056.23-.127.358-.165.655.309-.478 1.387.75 1.834-.096l.05.23c1.746-.03 2.53-.316 3.95-.383 0-.674.553-.535.984-1.085 1.05.196 2.21.707 3.482.63.878-.343.243-.568.635-.955.077.612 1.332.535.69.985a15.353 15.353 0 0 0 3.83-.68c-.21-.243-.447-.353-.331-.563a.738.738 0 0 1 .275.01c.09.02.173.058.245.11a.58.58 0 0 1 .169.188c.04.072.061.151.062.232l-.088.067c2.127-.956 4.973 1.706 6.669.41l-.099.068 1.763-.684c.817.1-.481.478.127.842 1.9-1.043 3.022.12 4.586-.574 1.243 1.793 4.327-.167 5.979.956l-.1-.42c.426-.421.52.234.835.33-.05-.33-.464-.378-.205-.613 3.598-.545 7.438.598 11.129.956 1.348.11.757-2.203 2.465-1.195l-.481.794c2.719-.956 5.564 0 8.233-.77-.154.182-.16.416-.425.416.552.574 2.083.034 2.094-.435.42.053.1.425.354.665.552.339 1.42-.732 1.718-.158.05.09-.16.186-.265.23.37-.278 1.719.076 1.365-.589 1 .32 1.917-.287 2.713.105.553-.736 1.713.364 1.884-.683-.077 1.08 1.752.875 2.387.377-.215.326.553.345.299.794.718 0 1.381-.206 1.265-.76 1.315 1.305 2.686-1.018 3.415.645a45.888 45.888 0 0 1 6.078-1.17c-.082 1.075-2.138.09-2.066 1.218 1.834-.425 2.906-1.343 4.719-1.066.47.153-.276.478-.437.65 1.835-.43 3.537.148 5.172-.42 0 .1-.182.21-.348.291.321-.033.741.167.713-.325l-.315.13c-.497-.718 1.304-1.468 1.365-1.841-.553 1.396 1.602.377.707 2.137a.73.73 0 0 0 .337-.263.58.58 0 0 0 .1-.383c.315.1.409.297.083.665 1.155-.254.757-.78 1.801-.75 0 .233-.221.324-.337.601.553-.478 1.078-.908 1.951-.697-.056.143.044.33-.216.325 1.509-.048 2.603-1.195 4.249-.722-.513 1.023.553.349.625 1.243l.895-.254-.348-.44c.785.034 1.492-.602 2.155-.296l-.591.354 1.47-.139-.824-.354c.807-.444-.055-1.132.978-.86-.21.086.785.029 1.177.56.398-.278.801-.57 1.376-.335.138.291-.149.984-.055 1.176.398-.736 1.834-.168 2.337-.956-.143.227-.192.49-.138.745l.337-.597c.359.2.409.296.337.669 1.105.134-.309-1.138.967-.626-.105.048-.055.138-.27.23 1.287.277 2.519-.335 3.702 0 .326.903-1.05.195-.669.955 1.724-.129 3.592-.999 5.25-.74l-.31-.106c.277-1.262 1.221.66 2.083.086-.21.086-.298.693-.237.555 1.105.234 2.343-.249 4.083-.603l-.226.32c.657.311 1.763.216 2.481.383.226-.315.641-.253.403-.731 2.166 1.912 4.305-.89 6.228.726-.238 0-.553.268-.387.273l1.702-.244c-.111-.554-.21-.34-.553-.784.124-.163.292-.298.489-.392.198-.094.419-.145.644-.148-.774.34-.028.884.287 1.205-.049-.173.072-.354.05-.526.846 1.008.199-1.11 1.376-.407l-.077.287c.458-.134.889-.478 1.37-.401.177.645-.492.282-.552.803.685 0 1.403-1.162 1.994-.507-.298.167-.718.158-1.016.325.641.77.729.583 1.221.717h-.044l1.138.378-.282-.21c.928-1.635 1.752-.25 2.951-1.3-1.166.994-.21.592-.332 1.309.288.21.724.454.586.65.553-.564.89.478 1.696-.34 0 .235.581.044.431.627.713-.163-.149-.411-.077-.703 1.133-.76 2.514 1.061 4.139.029 1.376-.397 1.658-1.171 2.94-1.515.403.392-.393.836-.393.836.267.161.581.255.906.27a1.97 1.97 0 0 0 .934-.184c-.138.196 0 .373.172.64.519-.038.386-.831 1.05-.477a3.24 3.24 0 0 1-.553.918c.619-.192 1.243-.603 1.884-.79.149.412-.409.603-.646.856.718-.153 1.851-.296 2.105-.927l-.442-.248c.26 0 .105.559-.094.669-.63.478-.862-.258-.884-.478l.459-.134c-.387-1.382-1.818.148-2.719.033l.431-.956-.973.784c-.182-.263-.287-.822.166-.956-.624-.516-.591.33-1.105-.239-.055-.086-.028-.134.033-.172l-.646.273c.132-.201-.072-.703.309-.545-1.105-.617-1.873.674-2.26-.096l.099-.057c-1.596.272-.193.721-1.414 1.534l-.713-1.83-.188.721c-.16-.033-.481-.1-.409-.387-.63.478.089.32-.287.78-.752-.699-2.172.229-2.293-.957-.31.545.729.478-.127.813-.183-1.258-.978.181-1.658-.416.254-.636.917-.273.226-.875-.486 1.076-1.386-.282-2-.096-.066.87-1.332.32-2.354.579.078-.292-1.89-.54-2.818-.885l.033-.148c-.221.87-1.182.674-1.901.832a.906.906 0 0 1 .132-.55c.102-.169.258-.31.449-.406h-.669a.979.979 0 0 1-.34.327 1.167 1.167 0 0 1-.478.151l.194-.65c-.885 0-1.813.712-2.94.244-.083.607.84 1.725-.381 2.103-.034-.335-.056-.899.27-1.028-.105.043-.381.263-.585.12l.502-.545c-.508-.258-.287.478-.701.397 0-.478-.293-.35-.221-.722.11-.038.359.205.525 0a1.931 1.931 0 0 1-.691-.264 1.649 1.649 0 0 1-.503-.487c.028.268-.028.636-.37.684-.89 0-.282-.574-.79-.832-.227.325-.78-.033-.824.674-.259 0-.293-.34-.387-.535-.469.3-2.149.033-1.657.793l.116.053s-.05 0-.078.033c-1.525.66-3.105-.478-4.608-.224V3.34c-.895.244-1.984.106-2.636.593a.711.711 0 0 1-.402-.28.553.553 0 0 1-.084-.442c-.691.158-.774.416-1.746 0 .701-.396-.221-.373.713-.287-.879-.224-1.067-.607-2.039 0 .342-.597-.641-.774-1.067-.602l.608.445c-.436.053-.88.039-1.31-.043l.254-.794c-1.784-1.004-3.315 1.578-4.647-.067-.497.545.973.411.553 1.052-.829-.124-1.658-1.286-1.929-1.29-1.132-.479-1.105 1.137-2.282.812a.818.818 0 0 1 .031.774.938.938 0 0 1-.264.323 1.11 1.11 0 0 1-.397.198c-.829-.124-.994-1.214-.464-1.434.205 0 .299.072.288.168.27-.096.629-.21.303-.526l-.116.282c-.403-.297-1.552-.292-1.271-.75-.635.257-.281.477.183.616-1.061-.435-1.658-.053-2.763-.344.171.162.326.478.155.478-1.608-.378-.724.526-1.824.636-.608-.445.249-1.033-.862-.684-.668-.306-.127-.755.149-.985-1.016.536-1.867-.387-2.442-.478l.553-.22a1.892 1.892 0 0 1-.846.12l.293.573c-.309-.105-.553-.11-.553-.348-.326.368.227.956-.42 1.434-.403-.297-1.265.286-1.392-.478 1.298.272-.127-.76.978-.866a1.102 1.102 0 0 1-.851.024c-.044-.086.044-.157.133-.2-1.233-.689-.592.846-1.879.807.171-.42-.287-.808-.497-.721.519 0 .237.712-.249 1.027-.823-.34-.906.235-1.337.187l.491.162c-.176.426-.585.364-1.165.478-.045-.33.524-.22.326-.368-.652.736-1.437-.793-2.338-.306-.409-.291-.027-.798-.387-.999-1.011.54-1.077-.588-2.133-.148.293.574.349.435-.403.985l1.735-.387-1.105.822c.525 0 1.105-.35 1.42-.249-.553.478-.481.316-.238.794-.701-.86-1.425.478-2.21-.1l.044-1.41c-1.232-.641-2.21.702-3.823.334l.513.248c-.221.56-.994.072-1.519.292.055-.478-.271-.645-.492-.956.028.349-1.177-.043-1.337.899l-.707-.627c-1.305-.267-1.503 1.33-2.763 1.157.381-.507-.183-.846.657-1.21-.414 0-.79-.095-.801.23-.276-.263-1.199.646-1.575.215-.182.206-.243.698-.713.655a.337.337 0 0 1 0-.234c0 .234-.735.31-.331.837-1.271-1.478-3.592.095-4.708-1.172-.936.165-1.883.277-2.835.335.05-.139 0-.234.16-.186-1.143-.44-.707 1.352-2.005.86-.664-.765.69-.411.276-.703-.171-1.553-1.564.21-2.437-.702l.21-.091c-.663-.555-1.608.564-2.713.454a.326.326 0 0 0 0-.234c-.746.784-2.155 1.051-3.205 1.271.326-.607.475-.32.276-.956-.47.091.138.99-.801 1.167-.304-.33-.984-.622-1.078-1.282l.89-.019c-.459-.85-1.149.034-1.613-.114l.055-.368c-1.36.124-1.376 1.06-2.835.999l.155.282c-.796.956-.674-.521-1.465.172l-.248-.956c-.871.453-1.797.82-2.763 1.094.552-.698 1.658-1.06 2.315-1.477-.519 0-1.774.072-2.044.54.21-.09.475-.325.685-.181a2.832 2.832 0 0 1-1.094.83 3.298 3.298 0 0 1-1.42.27c.171-1.832-2.713-.455-3.482-1.865-1.834.693-3.652-.258-5.796-.13.774 1.435-.625.049-.481 1.507-.497.1-.685.076-.729 0l-1.525-.86c-.365-.421.469-.326.42-.65-1.106-.106-.465-.618-1.194-1 .155.521-.37.75-1 .56l.901.659c-1.52.793-1.338-1.214-2.868-.43l.48-.478c-.79.277-2.917 0-3.674 1.204-.144-.167-.332-.564 0-.674-1.89-.148-4.183 1.31-5.664.612l.138-.358c-.348.105-.602.678-1.05.325 0-.148.138-.359 0-.378-.182.124-.923.64-1.392.44l.386-.411c-1.85-.44-2.807 1.023-4.343 1.29 0-1.051-1.475-1.376-2.21-1.53V.685c-2.15-.086-3.625.956-5.598 1.4-1.265-1.118-4.188-.392-6.194-.99.31.182 0 .818-.37.957-.475-.206-1.266.755-1.221-.21h.165c-.375-.957-1.326-.67-2.072-.675l-.083 1.267c-2.006-1.778-5.106.813-6.227-.803-.459.33-1.045.34-1.498.67v-.68a12.396 12.396 0 0 0-3.575 0l.31-.478c-.912 0-1.072 1.98-1.912 2.042l-.288-1c-1.591.053-3.232-.774-4.763.192 0-.148.055-.445.31-.478-.746 0-2.918-.588-2.587.788-.06-.903-1.657-.038-2.48.388l.104-.689c-.685.875-.701 1.11-1.696 1.377-.243-.076-.238-.526.088-.368-.812-.32-.59.655-1.574.33l.342-.435c-.823-.029-.746.2-1.177.707-.503.287-1.564-.114-1.713-.712-.094.368-.52.875-1.011.717a.38.38 0 0 1 .013-.245.442.442 0 0 1 .164-.2c-1.393-.406-2 .851-2.973.235a.553.553 0 0 0-.182-.392 9.431 9.431 0 0 1 1.89.028c0-.616-.912-.688-.255-1.563-.685.478-1.845 1.54-2.713 1.286a.84.84 0 0 1-.1-.215l.061-.072a.668.668 0 0 0-.295 0 .61.61 0 0 0-.257.125 1.992 1.992 0 0 0-.718-.158c-.128-.507-1.023-.234-1.465-.244.072.67-.508.583.06 1.119-.07-.048.078-.086.366-.125a.528.528 0 0 0 .188-.076l-.028.062c.287-.033.663-.062 1.105-.09-.332.358-.68.654-1.183.3-.204.445-.43.894-.552 1.11-.647-.914-1.83-1.377-2.022-1.946-1.321.43-3.145.368-3.918 1.663-.376.177-.459-.344-.614-.535.216-.139.476-.13.586-.316-.74.354-2.249.216-2.381 1.105-.984-.364.491-.837-.818-.636l.166-.277c-2.675-1.291-4.09 2.433-7.068.755.204.105.304.148.354.296-3.316-.645-6.709 1.038-10.018-.062-.94-.205-1 .359-1.531.818l-.249-.713-.906.88c-1.315.679-2.47-1.65-4.117-.411l.254.478c-.624-.058-1.939.387-1.873-.177-.055.09-.166.516-.425.272l-.044-.372-1.487.712c-1.199-.215.078-1.506-1.658-1.492C.895 5.105-.22 6.114.04 6.362c.178.01.347.073.478.179a.645.645 0 0 1 .24.4l-.558.225C.17 8.279-.194 9.44 1.304 10.144l.917-.732.36.521-.818.1c.513.479.784 0 1.105-.305.07.225.233.42.458.55l.907-1.114c.149.43-.376.884.292 1.094.426-.516-.502-.956.233-1.314.513.478.403.898.933.44a.447.447 0 0 1 .012.336.525.525 0 0 1-.233.27c.476-.367 1.304-.214 1.525-.817.553.598 1.658-.248 1.691.808.29-.433.74-.77 1.277-.956-.752 1.3 1.724 0 1.591 1.348.553-1.162 2.21-.617 3.255-1.3-.055.095-.16.282-.265.23.624.061.823.391 1.237.592 0-.956.967-1.195 1.448-1.797.812.87-.392 1.118-.1 1.974-.082-.755 1.272-.813.973-1.434.614.53.514.248.862 1.008.028-1.17.553-.22.962-.956.873.54.282 1.086 1.182.689.453.354-.342.808-.342.808Zm21.793-2.93-.447.057.447-.058Zm1.818-.091a7.552 7.552 0 0 0-.801 0c-.072-.23 0-.478.171-.478-.083.186.348.305.63.478Zm-4.128-4.49c.288-.109.393 0 .442.159-.172.02-.343.053-.508.1v.081a.973.973 0 0 1 .066-.34Z"})})]}),"."]})},{Header:em}=h.Z,ey=W.Z.Row,ej=W.Z.Col,eC=()=>{let e=(0,u.s0)(),{t,i18n:l}=(0,v.$G)(),i=t("menuButton",{returnObjects:!0}),r=ep(e=>e.themeColor),n=ep(e=>e.titleBachgroundColor),a=eg(e=>e.setPage);return(0,s.jsx)("div",{style:{backgroundColor:n},children:(0,s.jsx)(h.Z,{children:(0,s.jsx)(em,{style:{padding:20},children:(0,s.jsxs)(ey,{style:{display:"flex",alignItems:"center"},children:[(0,s.jsx)(ej,{span:4}),(0,s.jsxs)(ej,{span:7,children:[(0,s.jsxs)(ed.Z,{children:[(0,s.jsx)(eh.Z,{style:{fontSize:50,wordBreak:"break-all",fontWeight:"bolder"},children:"zh"===l.language?(0,s.jsx)(ev,{}):(0,s.jsx)(ex,{})}),(0,s.jsx)(eu.Z,{type:"secondary",style:{fontSize:22},children:t("subTitle")})]}),(0,s.jsx)("div",{style:{paddingBottom:10,display:"flex",justifyContent:"space-between"},children:null==i?void 0:i.map(t=>(0,s.jsx)(H.Z,{shape:"round",type:"outline",size:"large",onClick:()=>{a(null==t?void 0:t.index),e(null==t?void 0:t.value)},value:t.value,children:t.key},t.value))})]}),(0,s.jsx)(ej,{span:1}),(0,s.jsx)(ej,{span:8,style:{height:"100%"},children:(0,s.jsxs)("div",{style:{fontSize:55,color:r},children:[(0,s.jsx)("div",{children:"[\u0305\u0332A\u0305\u0332\u0305\u0332l\u0305\u0332\u0305\u0332g\u0305\u0332\u0305\u0332o\u0305\u0332\u0305\u0332r\u0305\u0332\u0305\u0332i\u0305\u0332\u0305\u0332t\u0305\u0332\u0305\u0332h\u0305\u0332\u0305\u0332m\u0305\u0332"}),(0,s.jsx)("div",{style:{paddingLeft:150},children:"V\u0305\u0332\u0305\u0332i\u0305\u0332\u0305\u0332s\u0305\u0332\u0305\u0332u\u0305\u0332\u0305\u0332a\u0305\u0332\u0305\u0332l\u0305\u0332\u0305\u0332i\u0305\u0332\u0305\u0332z\u0305\u0332\u0305\u0332a\u0305\u0332\u0305\u0332t\u0305\u0332\u0305\u0332i\u0305\u0332\u0305\u0332o\u0305\u0332\u0305\u0332n\u0305\u0332]"})]})})]})})})})},ef=()=>{let{t:e}=(0,v.$G)();return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(ed.Z,{children:[(0,s.jsx)(eh.Z,{children:e("api.title")}),(0,s.jsx)(eu.Z,{children:e("api.content")})]}),(0,s.jsx)("div",{children:"map\u4E00\u4E0B"})]})},eb=()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(ed.Z,{children:[(0,s.jsx)(eh.Z,{children:"Algorithm-gallery"}),(0,s.jsx)(eu.Z,{children:"The following is a classification of algorithms by algorithm type as much as possible."})]}),(0,s.jsx)("div",{children:"map\u4E00\u4E0B"})]}),ek=W.Z.Row,ew=W.Z.Col,{Content:eZ}=h.Z,eA=()=>{let{t:e}=(0,v.$G)();return(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(h.Z,{children:(0,s.jsx)(eZ,{style:{backgroundColor:"white",margin:"15px 0"},children:(0,s.jsxs)(ek,{children:[(0,s.jsx)(ew,{span:4,children:(0,s.jsx)("div",{})}),(0,s.jsxs)(ew,{span:16,children:[(0,s.jsxs)(ed.Z,{children:[(0,s.jsx)(eh.Z,{children:e("designGoal.title")}),(0,s.jsx)(eu.Z,{children:e("designGoal.content")})]}),(0,s.jsx)(eo.Z,{}),(0,s.jsx)(ef,{}),(0,s.jsx)(eo.Z,{}),(0,s.jsx)(eb,{})]}),(0,s.jsx)(ew,{span:4,children:(0,s.jsx)("div",{})})]})})})})},eL=W.Z.Row,eS=W.Z.Col,eF=()=>{let[e,t]=(0,c.useState)(et);return(0,s.jsxs)(eL,{style:{marginBottom:16},children:[(0,s.jsx)(eS,{span:11,children:(0,s.jsx)("div",{style:{height:"560px"},children:(0,s.jsx)(el,{id:"chart",code:e})})}),(0,s.jsx)(eS,{span:13,style:{paddingLeft:10,height:"560px"},children:(0,s.jsx)(Q,{onChange:e=>{t(e)},code:e})})]})},{Content:eO}=h.Z;l("7645"),l("2994");var eT=l("4887"),eD=l("480");let eP=()=>(0,s.jsxs)("svg",{width:25,height:25,viewBox:"0 0 30 30",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,s.jsx)("rect",{width:"30",height:"30",fill:"none"}),(0,s.jsx)("path",{d:"M12.879 2.29266L9.64225 7.14358M11.3924 23.1595H3.32806C2.49964 23.1595 1.82807 22.4879 1.82806 21.6595L1.82801 3.30494C1.828 2.47651 2.49958 1.80493 3.32801 1.80493H12.0377C12.7923 1.80493 13.4294 2.36553 13.5255 3.11401L14.0426 7.14358",stroke:"black",strokeWidth:"1.5"}),(0,s.jsx)("path",{d:"M28.172 26.7224L28.172 8.27767C28.172 7.44924 27.5004 6.77767 26.672 6.77767H10.6341C9.72673 6.77767 9.02711 7.57703 9.14733 8.47641L11.6128 26.9211C11.7124 27.6661 12.348 28.2223 13.0996 28.2224L26.672 28.2224C27.5004 28.2224 28.172 27.5509 28.172 26.7224Z",stroke:"black",strokeWidth:"1.5"}),(0,s.jsx)("path",{d:"M5.9884 15.9309L7.63223 7.72638C7.65095 7.63293 7.73302 7.56567 7.82833 7.56567H9.22074M7.05086 12.5488H9.51387",stroke:"black",strokeWidth:"1.5",strokeLinecap:"round"}),(0,s.jsx)("path",{d:"M20.1215 18.3892L20.6824 17.8913L20.6824 17.8913L20.1215 18.3892ZM22.4039 21.5265C22.7494 21.755 23.2147 21.6601 23.4432 21.3146C23.6716 20.9691 23.5768 20.5038 23.2313 20.2753L22.4039 21.5265ZM17.8656 14.6006C17.1555 14.8421 17.1556 14.8423 17.1556 14.8424C17.1556 14.8425 17.1557 14.8427 17.1558 14.8428C17.1558 14.8431 17.1559 14.8434 17.156 14.8437C17.1563 14.8443 17.1565 14.8451 17.1568 14.846C17.1575 14.8478 17.1582 14.85 17.1592 14.8528C17.1611 14.8583 17.1637 14.8657 17.167 14.8751C17.1736 14.8937 17.1831 14.9197 17.1953 14.9526C17.2198 15.0185 17.2558 15.112 17.3036 15.2286C17.3991 15.4617 17.5423 15.7882 17.7366 16.1718C18.1235 16.9356 18.7214 17.942 19.5607 18.8872L20.6824 17.8913C19.9539 17.0709 19.4237 16.1829 19.0747 15.4939C18.9009 15.151 18.7741 14.8614 18.6916 14.6599C18.6504 14.5593 18.6203 14.481 18.6011 14.4293C18.5914 14.4035 18.5845 14.3843 18.5803 14.3724C18.5782 14.3665 18.5768 14.3623 18.576 14.3601C18.5756 14.359 18.5754 14.3583 18.5753 14.3581C18.5753 14.358 18.5753 14.3581 18.5753 14.3582C18.5754 14.3583 18.5754 14.3584 18.5754 14.3586C18.5755 14.3586 18.5755 14.3587 18.5755 14.3588C18.5756 14.3589 18.5756 14.3591 17.8656 14.6006ZM19.5607 18.8872C20.3692 19.7976 21.0683 20.4497 21.5711 20.8781C21.8226 21.0923 22.0249 21.2505 22.1673 21.3571C22.2385 21.4104 22.2947 21.4508 22.3346 21.4789C22.3545 21.4929 22.3704 21.5038 22.382 21.5117C22.3878 21.5157 22.3926 21.5189 22.3962 21.5214C22.398 21.5226 22.3996 21.5236 22.4009 21.5245C22.4015 21.5249 22.4021 21.5253 22.4026 21.5256C22.4028 21.5258 22.4031 21.5259 22.4033 21.5261C22.4034 21.5262 22.4036 21.5263 22.4036 21.5263C22.4038 21.5264 22.4039 21.5265 22.8176 20.9009C23.2313 20.2753 23.2314 20.2754 23.2315 20.2755C23.2316 20.2755 23.2317 20.2756 23.2318 20.2756C23.2319 20.2757 23.232 20.2758 23.2322 20.2759C23.2324 20.276 23.2326 20.2762 23.2326 20.2762C23.2328 20.2763 23.2327 20.2763 23.2324 20.276C23.2317 20.2756 23.2299 20.2744 23.227 20.2724C23.2214 20.2685 23.2114 20.2617 23.1975 20.2519C23.1695 20.2323 23.1254 20.2006 23.0663 20.1564C22.9482 20.0679 22.7705 19.9293 22.5438 19.7362C22.0906 19.3502 21.4418 18.7464 20.6824 17.8913L19.5607 18.8872Z",fill:"black"}),(0,s.jsx)("path",{d:"M20.519 18.389L21.0798 18.887L21.0798 18.887L20.519 18.389ZM18.2366 21.5262C17.8911 21.7547 17.4258 21.6598 17.1974 21.3143C16.9689 20.9688 17.0638 20.5035 17.4093 20.275L18.2366 21.5262ZM22.8176 14.6006C23.523 14.8554 23.5229 14.8556 23.5228 14.8557C23.5228 14.8558 23.5228 14.8559 23.5227 14.8561C23.5226 14.8563 23.5225 14.8566 23.5224 14.8569C23.5222 14.8575 23.5219 14.8583 23.5216 14.8591C23.521 14.8609 23.5202 14.8631 23.5192 14.8658C23.5172 14.8712 23.5144 14.8786 23.511 14.8878C23.504 14.9062 23.4942 14.9321 23.4813 14.9648C23.4557 15.0302 23.4181 15.1233 23.3684 15.2394C23.269 15.4715 23.1206 15.797 22.9213 16.1794C22.5243 16.9409 21.9168 17.9443 21.0798 18.887L19.9582 17.891C20.6889 17.068 21.2308 16.1772 21.5912 15.486C21.7705 15.142 21.9028 14.8514 21.9894 14.649C22.0327 14.548 22.0645 14.4692 22.0849 14.4171C22.0951 14.3911 22.1025 14.3718 22.107 14.3597C22.1093 14.3536 22.1108 14.3494 22.1117 14.3471C22.1121 14.3459 22.1124 14.3452 22.1125 14.345C22.1125 14.3449 22.1125 14.3449 22.1125 14.345C22.1124 14.3451 22.1124 14.3452 22.1124 14.3453C22.1123 14.3453 22.1123 14.3455 22.1123 14.3455C22.1122 14.3456 22.1122 14.3458 22.8176 14.6006ZM21.0798 18.887C20.2714 19.7973 19.5722 20.4495 19.0694 20.8778C18.818 21.092 18.6156 21.2502 18.4732 21.3568C18.402 21.4101 18.3458 21.4505 18.3059 21.4786C18.286 21.4926 18.2701 21.5035 18.2585 21.5115C18.2527 21.5154 18.248 21.5186 18.2443 21.5211C18.2425 21.5223 18.2409 21.5233 18.2397 21.5242C18.239 21.5246 18.2384 21.525 18.2379 21.5253C18.2377 21.5255 18.2375 21.5257 18.2372 21.5258C18.2371 21.5259 18.237 21.526 18.2369 21.526C18.2368 21.5261 18.2366 21.5262 17.8229 20.9006C17.4093 20.275 17.4091 20.2751 17.409 20.2752C17.409 20.2752 17.4088 20.2753 17.4088 20.2754C17.4086 20.2754 17.4085 20.2755 17.4084 20.2756C17.4081 20.2758 17.408 20.2759 17.4079 20.2759C17.4077 20.2761 17.4078 20.276 17.4081 20.2758C17.4089 20.2753 17.4106 20.2741 17.4135 20.2721C17.4192 20.2683 17.4291 20.2614 17.4431 20.2516C17.471 20.232 17.5152 20.2003 17.5742 20.1561C17.6924 20.0676 17.8701 19.929 18.0967 19.7359C18.5499 19.3499 19.1988 18.7462 19.9582 17.891L21.0798 18.887Z",fill:"black"}),(0,s.jsx)("path",{d:"M17 14.3027L23.6831 14.3027",stroke:"black",strokeWidth:"1.5",strokeLinecap:"round"}),(0,s.jsx)("path",{d:"M20.3486 12.6001L20.3486 14.0332",stroke:"black",strokeWidth:"1.5",strokeLinecap:"round"})]}),eM=()=>(0,s.jsx)("svg",{fill:"none",stroke:"currentColor",strokeWidth:"4",viewBox:"0 0 48 48","aria-hidden":"true",focusable:"false",style:{width:25,height:25,color:"black"},children:(0,s.jsx)("path",{fill:"currentColor",stroke:"none",d:"M.056 24.618c0 10.454 6.7 19.344 16.038 22.608 1.259.32 1.067-.582 1.067-1.19v-4.148c-7.265.853-7.553-3.957-8.043-4.758-.987-1.686-3.312-2.112-2.62-2.912 1.654-.853 3.34.213 5.291 3.1 1.413 2.09 4.166 1.738 5.562 1.385a6.777 6.777 0 0 1 1.856-3.253C11.687 34.112 8.55 29.519 8.55 24.057c0-2.646.874-5.082 2.586-7.045-1.088-3.243.102-6.01.26-6.422 3.11-.282 6.337 2.225 6.587 2.421 1.766-.474 3.782-.73 6.038-.73 2.266 0 4.293.26 6.069.74.603-.458 3.6-2.608 6.49-2.345.155.41 1.317 3.12.294 6.315 1.734 1.968 2.62 4.422 2.62 7.077 0 5.472-3.158 10.07-10.699 11.397a6.82 6.82 0 0 1 2.037 4.875v6.02c.042.48 0 .96.806.96 9.477-3.194 16.299-12.15 16.299-22.697C47.938 11.396 37.218.68 23.996.68 10.77.675.055 11.391.055 24.617l.001.001Z"})}),eB=[{key:"\u4E2D\u6587\u7B80\u4F53",value:"zh"},{key:"English",value:"en"}],eI=g.Z.Item,eV=()=>{let{t:e,i18n:t}=(0,v.$G)(),l=e("menuList",{returnObjects:!0}),i=ep(e=>e.themeColor),r=ep(e=>e.titleBachgroundColor),n=ep(e=>e.contentBackgroundColor),a=eg(e=>e.page),c=eg(e=>e.setPage),o=(0,u.s0)(),d=(0,s.jsx)(g.Z,{children:null==eB?void 0:eB.map(e=>(0,s.jsx)(g.Z.Item,{onClick:()=>{t.changeLanguage(t.language=null==e?void 0:e.value)},children:null==e?void 0:e.key},null==e?void 0:e.value))});return(0,s.jsx)("div",{style:{background:r},children:(0,s.jsx)(eD.Z,{style:{background:n},title:(0,s.jsx)("div",{style:{color:i},children:"[\u0305\u0332A\u0305\u0332\u0305\u0332l\u0305\u0332\u0305\u0332V\u0305\u0332\u0305\u0332i\u0305\u0332\u0305\u0332s\u0305\u0332"}),subTitle:(0,s.jsx)(g.Z,{style:{width:"300px"},mode:"horizontal",selectedKeys:[a],color:i,children:null==l?void 0:l.map((e,t)=>(0,s.jsx)(eI,{onClick:()=>{c(null==e?void 0:e.index),o(null==e?void 0:e.key)},children:null==e?void 0:e.value},`${t}`))}),extra:(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(eT.Z,{droplist:d,position:"bl",children:(0,s.jsx)("span",{children:(0,s.jsx)(eP,{})})}),(0,s.jsx)("span",{style:{marginLeft:10},children:(0,s.jsx)(p.Z,{href:"https://github.com/Calculus9/algorithm-visualization",children:(0,s.jsx)(eM,{})})})]})})})},eN=function(e){let{children:t}=e,l=ep(e=>e.titleBachgroundColor);return(0,s.jsxs)("div",{children:[(0,s.jsx)(eV,{}),(0,s.jsx)("div",{style:{padding:"0 120px",backgroundColor:l,marginBottom:10},children:t}),(0,s.jsx)("div",{style:{textAlign:"center"},children:`Copyright \xa9${new Date().getFullYear()} Calculus9.jingyu`})]})};var e_=l("328"),ez=JSON.parse('{"menuList":[{"key":"/","value":"Home","index":"0"},{"key":"/api","value":"API","index":"1"},{"key":"/gallery","value":"Gallery","index":"2"}],"title":"An algorithm visualization library based on schema.","subTitle":"Finite DataStructures & Infinite Algorithms.","menuButton":[{"key":"APIs","value":"api","index":"1"},{"key":"Gallerys","value":"gallery","index":"2"}],"designGoal":{"title":"Design Goal","content":"My main goal is algorithm visualization, but it is not easy to visualize the execution process of the Algorithm."},"api":{"title":"API","content":"According to our design goals, before the algorithm can be visualized, the data structure needs to be visualized firstly. I have listed the data structures and interfaces I have implemented. Here you can intuitively understand how to use each interface. In most cases, the execution of each line of code is animated to help you understand the change in structure."},"gallery":{"title":"Gallery","content":"Here is the algorithm gallery.","algorithmList":[{"title":"Brute Force","algorithms":["Bubble Sort"]},{"title":"dp","algorithms":["Fibonacci Numbers","Climbing stairs"]},{"title":"Conquer","algorithms":["Insert Sort","Quick Sort"]}]}}'),e$=JSON.parse('{"menuList":[{"key":"/","value":"\u9996\u9875","index":"0"},{"key":"/api","value":"\u63A5\u53E3\u6587\u6863","index":"1"},{"key":"/gallery","value":"\u7B97\u6CD5\u753B\u5ECA","index":"2"}],"title":"\u4E00\u4E2A\u57FA\u4E8E\u6807\u51C6\u7684\u7B97\u6CD5\u53EF\u89C6\u5316\u5E93\u3002","subTitle":"\u6709\u9650\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u65E0\u9650\u7684\u7B97\u6CD5\u3002","menuButton":[{"key":"\u63A5\u53E3\u6587\u6863","value":"api","index":"1"},{"key":"\u7B97\u6CD5\u753B\u5ECA","value":"gallery","index":"2"}],"designGoal":{"title":"\u8BBE\u8BA1\u76EE\u6807","content":"\u4E3B\u8981\u76EE\u6807\u662F\u7B97\u6CD5\u53EF\u89C6\u5316\uFF0C\u4F46\u8981\u5C06\u7B97\u6CD5\u7684\u6267\u884C\u8FC7\u7A0B\u53EF\u89C6\u5316\u5E76\u4E0D\u5BB9\u6613\u3002"},"api":{"title":"\u63A5\u53E3","content":"\u6839\u636E\u6211\u7684\u8BBE\u8BA1\u76EE\u6807\uFF0C\u5728\u7B97\u6CD5\u53EF\u89C6\u5316\u4E4B\u524D\uFF0C\u9700\u8981\u5148\u5C06\u6570\u636E\u7ED3\u6784\u53EF\u89C6\u5316\u3002\u8FD9\u91CC\u5217\u51FA\u4E86\u6240\u5B9E\u73B0\u7684\u6570\u636E\u7ED3\u6784\u548C\u63A5\u53E3\uFF0C\u53EF\u4EE5\u76F4\u89C2\u5730\u4E86\u89E3\u6BCF\u4E2A\u63A5\u53E3\u5982\u4F55\u4F7F\u7528\u3002\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u6BCF\u884C\u4EE3\u7801\u7684\u6267\u884C\u90FD\u662F\u52A8\u753B\uFF0C\u4EE5\u5E2E\u52A9\u4F60\u4E86\u89E3\u7ED3\u6784\u7684\u53D8\u5316\u3002"},"gallery":{"title":"\u7B97\u6CD5\u753B\u5ECA","content":"\u8FD9\u91CC\u662F\u7B97\u6CD5\u753B\u5ECA\u3002","algorithmList":[{"title":"\u66B4\u529B","algorithms":["\u5192\u6CE1\u6392\u5E8F"]},{"title":"\u52A8\u6001\u89C4\u5212","algorithms":["\u6590\u6CE2\u90A3\u5951\u6570\u5217","\u722C\u697C\u68AF"]},{"title":"\u5206(\u51CF)\u6CBB","algorithms":["\u63D2\u5165\u6392\u5E8F","\u5FEB\u901F\u6392\u5E8F"]}]}}');e_.ZP.use(v.Db).init({fallbackLng:"zh",interpolation:{escapeValue:!1},resources:{en:{translation:ez},zh:{translation:e$}}}),o.createRoot(document.getElementById("root")).render((0,s.jsx)(d.VK,{children:(0,s.jsxs)(u.Z5,{children:[(0,s.jsx)(u.AW,{index:!0,path:"/",element:(0,s.jsx)(eN,{children:(0,s.jsx)(()=>(0,s.jsx)(s.Fragment,{children:(0,s.jsxs)(h.Z,{children:[(0,s.jsx)(eC,{}),(0,s.jsxs)(eO,{children:[(0,s.jsx)(eo.Z,{}),(0,s.jsx)(eF,{}),(0,s.jsx)(eA,{})]})]})}),{})})}),(0,s.jsx)(u.AW,{path:"/api",element:(0,s.jsx)(eN,{children:(0,s.jsx)(()=>(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(h.Z,{style:{padding:"10px",height:500},children:"Page Api"})}),{})})}),(0,s.jsx)(u.AW,{path:"/gallery",element:(0,s.jsx)(eN,{children:(0,s.jsx)(()=>(0,s.jsx)(s.Fragment,{children:(0,s.jsx)("div",{children:(0,s.jsx)(h.Z,{children:(0,s.jsxs)(h.Z,{children:[(0,s.jsx)(ec,{children:(0,s.jsx)(m,{})}),(0,s.jsx)(es,{style:{margin:10},children:(0,s.jsx)(ea,{})})]})})})}),{})})})]})}))}},t={};function l(i){var r=t[i];if(void 0!==r)return r.exports;var n=t[i]={id:i,loaded:!1,exports:{}};return e[i].call(n.exports,n,n.exports,l),n.loaded=!0,n.exports}l.m=e,l.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__};l.t=function(i,r){if(1&r&&(i=this(i)),8&r||"object"==typeof i&&i&&(4&r&&i.__esModule||16&r&&"function"==typeof i.then))return i;var n=Object.create(null);l.r(n);var a={};e=e||[null,t({}),t([]),t(t)];for(var s=2&r&&i;"object"==typeof s&&!~e.indexOf(s);s=t(s))Object.getOwnPropertyNames(s).forEach(function(e){a[e]=function(){return i[e]}});return a.default=function(){return i},l.d(n,a),n}})(),l.d=function(e,t){for(var i in t)l.o(t,i)&&!l.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},l.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||Function("return this")()}catch(e){if("object"==typeof window)return window}}(),l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.nmd=function(e){return e.paths=[],!e.children&&(e.children=[]),e},(()=>{var e=[];l.O=function(t,i,r,n){if(i){n=n||0;for(var a=e.length;a>0&&e[a-1][2]>n;a--)e[a]=e[a-1];e[a]=[i,r,n];return}for(var s=1/0,a=0;a<e.length;a++){for(var i=e[a][0],r=e[a][1],n=e[a][2],c=!0,o=0;o<i.length;o++)(!1&n||s>=n)&&Object.keys(l.O).every(function(e){return l.O[e](i[o])})?i.splice(o--,1):(c=!1,n<s&&(s=n));if(c){e.splice(a--,1);var d=r();void 0!==d&&(t=d)}}return t}})(),l.rv=function(){return"1.0.0-beta.3"},(()=>{var e={980:0};l.O.j=function(t){return 0===e[t]};var t=function(t,i){var r=i[0],n=i[1],a=i[2],s,c,o=0;if(r.some(function(t){return 0!==e[t]})){for(s in n)l.o(n,s)&&(l.m[s]=n[s]);if(a)var d=a(l)}for(t&&t(i);o<r.length;o++)c=r[o],l.o(e,c)&&e[c]&&e[c][0](),e[c]=0;return l.O(d)},i=self.webpackChunk_alvis_web=self.webpackChunk_alvis_web||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))})(),l.ruid="bundler=rspack@1.0.0-beta.3";var i=l.O(void 0,["707","361","118","38"],function(){return l("2706")});i=l.O(i)})();